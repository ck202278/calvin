name: Build donations.json

on:
  issues:
    types: [opened, edited, labeled, reopened]
  workflow_dispatch:

permissions:
  contents: write
  issues: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate donations.json from issues
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const dir = 'data';
            if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });

            // 모든 'donation' 라벨 이슈 수집
            const issues = await github.paginate(
              github.rest.issues.listForRepo,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'donation',
                state: 'all',
                per_page: 100
              }
            );

            function grab(body, label) {
              // Issue Form 본문에서 "label" 다음 줄의 첫 값 추출
              const lines = body.split('\n');
              for (let i = 0; i < lines.length; i++) {
                const clean = lines[i].trim().replace(/^[#>*\-\s]+/g,'');
                if (clean.startsWith(label)) {
                  for (let j = i + 1; j < lines.length; j++) {
                    const v = lines[j].trim();
                    if (v) return v;
                  }
                }
              }
              return '';
            }

            const items = [];
            for (const is of issues) {
              const body = is.body || '';
              const date = grab(body, '날짜');
              const type = grab(body, '구분');
              const name = grab(body, '이름');
              const amountRaw = grab(body, '금액');
              const desc = grab(body, '설명') || '';

              let amount = Number(String(amountRaw).replace(/[^0-9.\-]/g, ''));
              if (!Number.isFinite(amount)) amount = 0;
              if (type === '지출') amount = -Math.abs(amount);

              if (date && name && amount !== 0) {
                items.push({ date, type, name, amount, description: desc });
              }
            }

            // 날짜 내림차순으로 정렬
            items.sort((a, b) => new Date(b.date) - new Date(a.date));

            fs.writeFileSync('data/donations.json', JSON.stringify({ items }, null, 2), 'utf8');

      - name: Commit updated donations.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/donations.json
          if ! git diff --cached --quiet; then
            git commit -m "Update donations.json from issues"
            git push
          else
            echo "No changes to commit"
          fi
